{>"layouts/blog/blog"/}
{<title}SimpleAjax Class{/title}
{<date}11/14/2012{/date}
{<content}

<p>As I continue to move into a world filled with Ajax Requests, I found out that although the built in Ajax routine for JQuery is pretty handy, I needed something more. I didn&#39;t like seeing this in my code:</p>

<pre class="brush: js">
$.ajax(&#123;
  url: &quot;http://somewhere.com&quot;,
  type: &quot;post&quot;,
  data: &#123;name: &quot;test&quot;},
  dataType: &#39;json&#39;,
  contentType: &#39;application/json; charset=utf-8&#39;,
  success: function(response) &#123;
    // Happy Dance
  },
  fail: function(xhr) &#123;
    // Fail Code
  },
  error: function(xhr) &#123;
    // Error Code
  }
});
</pre>

<p>This meant if I have a really long block of code inside of my fail routine, then I might have to duplicate the same code if the response is an Error. Granted, sometimes I might want to change the functionality, but for the most part you are going to either send a &quot;post&quot; or &quot;get&quot; with JSON data and expect a response back whether a success or fail and then write functionality based on that. So I created a simple way to handle this madness. I called it SimpleAjax.</p>

<pre class="brush: js">
simpleAjax.request(&#123;
    url: &quot;http://somewhere.com&quot;,
    type: &quot;post&quot;,
    data: &#123;name: &quot;test&quot;},
    dataType: &#39;json&#39;,
  contentType: &#39;application/json; charset=utf-8&#39;,
    completed: function(response)&#123;
        if(response[&#39;success&#39;])&#123;
            // Happy Dance
        }else&#123;                
            // Fail Code
        }
    }
});
</pre>

<p>Now I can standardize all my Ajax requests and one nice simple response that contains the status, responseText, and XHR if you need to go further. I&#39;ve also taken this class and went one step further with making a simple way to make multiple asynchronous Ajax requests and once all calls are complete run a custom callback. See:</p>

<pre class="brush: js">
simpleAjax.chain_request([&#123;
  name: &quot;one&quot;,
  url: &quot;http://localhost/demo/mapping&quot;,
  datatype: &quot;html&quot;,
  type: &quot;get&quot;
},&#123;
  name: &quot;two&quot;,
  url: &quot;http://localhost/UXFramework&quot;,
  datatype: &quot;html&quot;,
  type: &quot;get&quot;
},&#123;
  name: &quot;three&quot;,
  url: &quot;http://google.com&quot;,
  datatype: &quot;html&quot;,
  type: &quot;get&quot;
}], function(results)&#123;
  // Do something with the results
});
</pre>

<p>What&#39;s neat about this is that the response I get back is a JSON with all the requests I made and their response. Super easy to iterate through (seriously, response.three will get you the results you pulled from &quot;google.com&quot;).</p>

<p><a href="https://github.com/mikemunsie/Simple-Ajax">https://github.com/mikemunsie/Simple-Ajax</a></p>

{/content}