{>"layouts/blog/blog"/}
{<title}Multiple Controllers, Multiple Views, Go MVC!{/title}
{<date}11/30/2011{/date}
{<content}

<p>So it took exactly one year of writing and developing a framework to finally achieve one of my most desired goals: Controllers in your controllers, and Views in your Views - you know so you can put that view in your view and your... Yes you get the point, or perhaps you don&#39;t. Allow me to explain.</p>

<p>With typical MVC structure you run into the format of &quot;controller/view&quot;, so your URL&#39;s come out to: &quot;mikemunsie.com/categories/games&quot;</p>

<p>Well if you wanted to have a specific page to the game &quot;Alien Invasion&quot;? Maybe you can just route &quot;/categories/games/alien_invasion&quot; to a view and a controller, but why? Why not make it automatic just like the MVC fashion already! I want this:</p>

<p>&quot;mikemunsie.com/categories/games/alien_invasion/&quot;</p>

<p>Here is how I did it. Remember that applications folder I talked about? No more. I took that out and simply just have controllers and views. My logic goes as following:</p>

<p>&quot;If there is a folder for the controller or view, open that folder and search for the next paramater. If there is no next parameter, default to index.&quot;</p>

<p>Tests:</p>

<p>&quot;&quot; = Goes to &quot;index.php&quot;</p>

<p>&quot;test&quot; = Goes to &quot;test.php&quot; or &quot;test/index.php&quot; if the test folder exists.</p>

<p>&quot;test/fruit&quot; = Goes to &quot;test/fruit&quot; or &quot;test/fruit/index.php&quot; if the fruit folder exists.</p>

<p>&quot;test/fruit/grapes&quot;= Goes to &quot;test/fruit/grapes&quot; or &quot;test/fruit/grapes/index.php&quot; if the grapes folder exists.</p>

<p>&quot;test/fruit/grapes/tasty&quot;&nbsp;= Goes to &quot;test/fruit/grapes/tasty.php&quot; or &quot;test/fruit/grapes/tasty/index.php&quot; if the tasty folder exists.</p>

<div>That&#39;s pretty cool, it takes a bit to get used to especially since this is a radical change, but it&#39;s pretty simple and makes for the most ultra clean URL&#39;s, let alone the app can be as big as you want and you still have excellent organization.
<p>MVC^2. Cheers.</p>

{/content}