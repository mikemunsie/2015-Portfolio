{>"layouts/blog/blog"/}
{<title}Multiplayer JS-Tanks{/title}
{<date}09/02/2013{/date}
{<content}

<p>
  <a href="http://www.screencast.com/t/0kwMPvrUyMSz" target="_blank">
    <img src="/public/images/multiplayer-jstanks.png" />
  </a>
</p>

<h1>Dude, Web Sockets Rock.</h1>

<p>Here&#39;s the game in action @&nbsp;<a href="http://www.screencast.com/t/0kwMPvrUyMSz">http://www.screencast.com/t/0kwMPvrUyMSz</a></p>

<p>Today I&nbsp;decided to learn a little about NodeJS... well about 6 hours later I conquered one of my childhood goals: to create a multiplayer JS game! Granted it&#39;s not much of a game and really only serves as a small example of what&#39;s to come, but I&#39;m pretty ecstatic that it works as well as it does. My goals for today were relatively simple: To learn about NodeJS, create a basic api call, and to possibly create a small website. Well that escalated quickly and I went down a path of learning about Web Sockets and my mind just completely had a field trip.&nbsp;</p>

<p>For the browser&nbsp;side of things, I&#39;m using <a href="http://socket.io/">socket.io</a>. It really does make it super easy to send and receive messages. Here&#39;s an example:</p>

<pre class="brush:js">
// Don&#39;t judge too harshly, this is not optimized :)
var socket = io.connect(&#39;192.168.0.4:4040&#39;);
socket.on(&#39;welcome&#39;, function (data) {
  playerNumber = data.player;
  randomSeed = data.time;
  Math.seedrandom(randomSeed);
  player1.x = Math.floor(Math.random() * playfield_width/32) * 32;
  player1.y = Math.floor(Math.random() * playfield_height/32) * 32;
  player2.x = Math.floor(Math.random() * playfield_width/32) * 32;
  player2.y = Math.floor(Math.random() * playfield_height/32) * 32;
  construct_walls();
  setInterval(&quot;main_loop()&quot;, frame_rate);
});

</pre>

<p>Basically I went through a whole&nbsp;lot of tutorials that were planted&nbsp;all over <a href="http://reddit.com/r/nodejs">reddit.com/r/nodejs</a>. It&#39;s pretty neat to have a backend language that can work asynchronously and have a syntax that&#39;s as flexible as JavaScript. I&#39;m really liking NodeJS so far and surprised that I didn&#39;t dive into it more previously. Dare I say I&#39;ll be moving into NodeJS from PHP? It&#39;s a very possible option ;)</p>

{/content}